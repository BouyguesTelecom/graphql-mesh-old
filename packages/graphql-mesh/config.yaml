serve:
  port: 4000
  hostname: "0.0.0.0"
  cors:
    origin: "*"
  fork: 1
  playground: true
  playgroundTitle: Console GraphQL Test
  browser: false

skipSSLValidation: true
#additionalEnvelopPlugins: "./custom-plugins"
# ...
plugins:
  - filter-null:
      filter: true
  - monitor-fetch:
      options:
        logLevel: INFO
        fullFetcInfo: true
        responseInfo: true
  - monitor-yoga:
      options:
        logLevel: INFO
        maskError: 
           enabled: false
           message: "error"
        filterError: 
           enabled: true
        resultLogInfoLevel: "low"
        #masErrorMessage: "somthing is wrong"
  - monitor-envelop:
      options:
        denyInstropection: false
        logLevel: INFOG
        maskSuggestion: 
          enabled: true
          message: "no suggestion"

  - prometheus:
      # all optional, and by default, all set to false, please opt-in to the metrics you wish to get
 
      # requires `execute` to be true
      requestCount: true
      # requires `execute` to be true
      requestSummary: true
      parse: true
      validate: true
      contextBuilding: true
      execute: true
      errors: true
 
      # reports metrics for the delegation to the individual sources
      delegation: true
 
      # reports metrics for the outgoing HTTP requests
      fetchMetrics: true
      # Adds the request headers to the metrics
      fetchRequestHeaders: true
      # Adds the response headers to the metrics
      fetchResponseHeaders: true
 
      # reports metrics for the incoming HTTP requests (this sets a custom name for http)
      # If you pass a string instead of boolean, it will be used as the name of the metric
      http: true
      # Adds the request headers to the metrics
      httpRequestHeaders: true
      # Adds the response headers to the metrics
      httpResponseHeaders: true
 
      # by default all fields are reported
      deprecatedFields: true
      # the path of the endpoint to expose the metrics, default is /metrics
      endpoint: /metrics
