diff --git a/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js b/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
index e815992..e7a949c 100644
--- a/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
+++ b/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
@@ -31,6 +31,19 @@ async function getJSONSchemaOptionsFromOpenAPIOptions(name, { source, fallbackFo
             readFileOrUrl: readFileOrUrlForJsonMachete,
             debugLogFn: logger.debug.bind(logger),
         }));
+        // Add a "properties" key if a schema of object type doesn't have one
+        const schemas = oasOrSwagger.components?.schemas
+        for (const schemaName in schemas) {
+            try {
+                if (!JSON.stringify(schemas[schemaName]).includes('"properties"') &&
+                    schemas[schemaName].type === "object") {
+                    schemas[schemaName]["properties"] = {"_null": {}}
+                }
+            }
+            catch (e) {
+                // ignore
+            }
+        }
     }
     else {
         oasOrSwagger = await (0, json_machete_1.dereferenceObject)(source, {
@@ -278,7 +291,7 @@ async function getJSONSchemaOptionsFromOpenAPIOptions(name, { source, fallbackFo
                     operationConfig.headers = operationConfig.headers || {};
                     operationConfig.headers.Accept = methodObj.produces.join(', ');
                 }
-                if ('content' in responseObj) {
+                if ('content' in responseObj && Object.keys(responseObj.content).length !== 0) {
                     const responseObjForStatusCode = {
                         oneOf: [],
                     };
