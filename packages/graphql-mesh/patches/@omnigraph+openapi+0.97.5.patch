diff --git a/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js b/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
index e815992..60e6edf 100644
--- a/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
+++ b/node_modules/@omnigraph/openapi/cjs/getJSONSchemaOptionsFromOpenAPIOptions.js
@@ -31,6 +31,24 @@ async function getJSONSchemaOptionsFromOpenAPIOptions(name, { source, fallbackFo
             readFileOrUrl: readFileOrUrlForJsonMachete,
             debugLogFn: logger.debug.bind(logger),
         }));
+        /**
+         * In some swagger specifications, some schemas of object type don't have a "property" key.
+         * This is not accepeted by the OAS.
+         * Therefore, we have to add one dummy property in this case.
+         */
+        for (let schemaKey in oasOrSwagger.components?.schemas) {
+            try {
+                if (!JSON.stringify(oasOrSwagger.components?.schemas[schemaKey]).includes('"properties"') &&
+                oasOrSwagger.components?.schemas[schemaKey].type === "object") {
+                    oasOrSwagger.components.schemas[schemaKey]["properties"] = {
+                        "_null": {
+                            "description": "",
+                            "type": "string"
+                        }
+                    }
+                }
+            } catch {}
+        }
     }
     else {
         oasOrSwagger = await (0, json_machete_1.dereferenceObject)(source, {
@@ -278,7 +296,7 @@ async function getJSONSchemaOptionsFromOpenAPIOptions(name, { source, fallbackFo
                     operationConfig.headers = operationConfig.headers || {};
                     operationConfig.headers.Accept = methodObj.produces.join(', ');
                 }
-                if ('content' in responseObj) {
+                if ('content' in responseObj && Object.keys(responseObj.content).length !== 0) {
                     const responseObjForStatusCode = {
                         oneOf: [],
                     };
