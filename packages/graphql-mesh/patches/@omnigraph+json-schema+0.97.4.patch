diff --git a/node_modules/@omnigraph/json-schema/cjs/addRootFieldResolver.js b/node_modules/@omnigraph/json-schema/cjs/addRootFieldResolver.js
index 8006747..265ee3f 100644
--- a/node_modules/@omnigraph/json-schema/cjs/addRootFieldResolver.js
+++ b/node_modules/@omnigraph/json-schema/cjs/addRootFieldResolver.js
@@ -35,6 +35,23 @@ function addHTTPRootFieldResolver(schema, field, logger, globalFetch, { path, op
         const interpolatedBaseUrl = string_interpolation_1.stringInterpolator.parse(endpoint, interpolationData);
         const interpolatedPath = string_interpolation_1.stringInterpolator.parse(path, interpolationData);
         let fullPath = (0, url_join_1.default)(interpolatedBaseUrl, interpolatedPath);
+        let subPath;
+        /**
+         * FIXME: This is a hack to follow link in the response
+         * In case where the root object contains several links,
+         * we need to follow the correct link which match the index of field in the path
+         */
+        if (root && root?.followsLink?.length) {
+          const index = info?.path?.key?.match(/_(\d+)_/)?.[1];
+          subPath = root.followsLink?.[index]?.followLink;
+          fullPath = interpolatedBaseUrl + subPath;
+        } else if (root && root.followLink) {
+          subPath = root.followLink;
+          fullPath = interpolatedBaseUrl + subPath;
+        }
+        if (root && !subPath) {
+          return
+        }
         const headers = {};
         for (const headerName in globalOperationHeaders) {
             const nonInterpolatedValue = globalOperationHeaders[headerName];
@@ -275,7 +292,8 @@ function addHTTPRootFieldResolver(schema, field, logger, globalFetch, { path, op
                         http: {
                             status: response.status,
                             statusText: response.statusText,
-                            headers: (0, utils_1.getHeadersObj)(response.headers),
+                            // FIXME: This is a hack for the 'ownKeys' error
+                            //headers: (0, utils_1.getHeadersObj)(response.headers),
                         },
                         request: {
                             url: fullPath,
